# Generated by Django 5.0.1 on 2024-02-28 11:37

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MotoUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Введите корректный адрес электронной почты.')])),
                ('login', models.CharField(max_length=30, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='moto_user/avatars')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('date_of_birth', models.DateField(validators=[django.core.validators.MinValueValidator(limit_value=datetime.date(1900, 1, 1), message='Дата рождения не может быть ранее 1900 года.'), django.core.validators.MaxValueValidator(limit_value=datetime.date(2024, 2, 28), message='Дата рождения не может быть в будущем.')])),
                ('preferences', models.CharField(choices=[('КЛАС', 'Классика'), ('СП', 'Спортивный Мотоцикл'), ('КР', 'Круизер'), ('ТМ', 'Тяжелый Мотоцикл'), ('КРОС', 'Кроссовый Мотоцикл'), ('ЭН', 'Туристический Эндуро'), ('ПТ', 'Питбайк')], max_length=100, verbose_name='Предпочитаемый вид мотоциклов')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. Максимум 15 цифр.", regex='^\\+?7?\\d{9,15}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
